package server;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.Socket;

public class ServerSideThread extends Thread
{

	
	protected Socket socketObj;
	
	public ServerSideThread(Socket socketObj, DataInputStream ipStream, DataOutputStream opStream)
	{
		// TODO Auto-generated constructor stub
		this.socketObj = socketObj;
	}

	
	public void run()
	{

		System.out.println("Providing service to client...");
		String inputFromUser = "";
		while (true)
		{
			try
			{
				inputFromUser = ipStream.readUTF();
				if (inputFromUser.trim().equalsIgnoreCase("Quit") || inputFromUser.trim().equals("")
						|| inputFromUser.isEmpty())
				{
					socketObj.close();
					System.out.println("Disconnecting client from server...");
					return;
				}

				else
				{
					String[] ipUser = inputFromUser.trim().split(" ");
					String fileName = ipUser[1];
					if (ipUser[0].equalsIgnoreCase("get"))
					{
						String fileContent = readDataFromFile(fileName);
						if(fileContent.isEmpty() || fileContent.trim().equals(""))
							System.out.println("File not found or some error in reading file");
						else
						{
							opStream.writeUTF(fileContent);
						}
						opStream.flush();
						System.out.println("File successfully sent to client: " +fileName);
					} else if (ipUser[0].equalsIgnoreCase("put"))
					{
						String fileContent = ipStream.readUTF();
						boolean writeFileToServer = writeFileToServer(fileName, fileContent);
						if(writeFileToServer)
							System.out.println("File Write SuccessFul: " + fileName);
						else
							System.out.println("Error in writing file: " + fileName);
						opStream.flush();
					} else
					{
						System.out.println("Invalid input... Please enter again");
						opStream.writeUTF("Invalid input... Please enter again");
						opStream.flush();
					}
				}

			} catch (IOException e)
			{
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	
	}
	
	protected static boolean writeFileToServer(String fileName, String fileContent)
	{
		boolean fileWrite = false;
		if(fileContent.equals("") || fileContent.isEmpty())
		{
			return fileWrite;
		}
		File newFile = new File(fileName);
		try
		{
			newFile.createNewFile();
			BufferedWriter out = new BufferedWriter(new FileWriter(fileName));
			out.write(fileContent);
			out.close();
			System.out.println("File write done. File path is: " + newFile.getAbsolutePath());
			fileWrite = true;
		} catch (IOException e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return fileWrite;
	}
	
	
	public static String readDataFromFile(String fileName)
	{
		StringBuilder stringBuilder = new StringBuilder();
		File newGetFile = new File(fileName);
		try
		{
			System.out.println("Reading data from file: " + fileName);
			BufferedReader in = new BufferedReader(new FileReader(newGetFile));
			String nextLine = "";
			while((nextLine = in.readLine()) != null)
			{
				stringBuilder.append(nextLine + "\n");
			}
			in.close();
		} catch (FileNotFoundException e)
		{
			System.out.println("File not found " + fileName);
		} catch (IOException e)
		{
			System.out.println("Error in reading file " + fileName);
		}
		
		
		return stringBuilder.toString();
		
	}
}
